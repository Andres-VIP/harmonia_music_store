version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: harmonia-postgres
    environment:
      POSTGRES_DB: harmonia
      POSTGRES_USER: harmonia_user
      POSTGRES_PASSWORD: harmonia_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - harmonia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U harmonia_user -d harmonia"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: harmonia-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - harmonia-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Application
  app:
    build: .
    container_name: harmonia-app
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/harmonia
      SPRING_DATASOURCE_USERNAME: harmonia_user
      SPRING_DATASOURCE_PASSWORD: harmonia_pass
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - harmonia-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # pgAdmin to manage PostgreSQL (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: harmonia-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@harmonia.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - harmonia-network

volumes:
  postgres_data:
  redis_data:

networks:
  harmonia-network:
    driver: bridge 